[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aideon-worker"
version = "0.1.0"
description = "Aideon Praxis Python worker sidecar (RPC only)"
requires-python = ">=3.13"
dependencies = []
license = { file = "LICENSE" }

[project.optional-dependencies]
dev = [
  "ruff==0.6.9",
  "black==25.9.0",
  "pytest==8.4.2",
  "pytest-cov==5.0.0",
  "mypy==1.11.2",
  "bandit==1.7.9",
  "vulture>=2.11",
  "fastapi==0.115.0",
  "pydantic==2.12.3",
  "uvicorn==0.38.0",
  "httpx==0.28.1",
]

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
  # Base
  "E", "F", "I",
  # Bugbear and upgrades
  "B", "UP",
  # Comprehensions & simplify
  "C4", "SIM",
  # Security (Bandit-like)
  "S",
  # Pylint conventions subset
  "PL",
  # Naming
  "N",
  # Commented code
  "ERA",
  # Docstring style
  "D",
]
ignore = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Allow test-style asserts and missing docstrings in tests; support both repo-root and pkg-root runs
"packages/worker/tests/**" = ["D100", "D103", "S101", "PLR2004"]
"tests/**" = ["D100", "D103", "S101", "PLR2004"]

[tool.mypy]
python_version = "3.13"
packages = ["aideon_worker"]
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_optional = true
explicit_package_bases = false
pretty = true

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
